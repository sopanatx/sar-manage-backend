# ------------------------------------------------------
# THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
# ------------------------------------------------------

type getServiceStatus {
  status: String
  serviceName: String
  isInMaintenance: Boolean
}

type tokenModel {
  accessToken: String!
  refreshToken: String!
}

type PasswordResetResponseModel {
  status: String!
  statusMessage: String!
}

type getSemester {
  id: String
  semesterName: String
  isAvailable: Boolean
  createdAt: DateTime
  updatedAt: DateTime
}

"""
A date-time string at UTC, such as 2019-12-03T09:54:33Z, compliant with the date-time format.
"""
scalar DateTime

type FileUploadDataByName {
  index: String!
}

type searchFileBySemesterModel {
  id: Float!
  categoryName: String!
  isAvailable: Boolean!
  createdAt: DateTime!
  updatedAt: DateTime!
  FileUploadData: [FileUploadDataByName!]
}

type TopicModel {
  topicName: String
  topicDetails: String
  createdAt: DateTime!
  updatedAt: DateTime!
}

type Topic {
  id: Float!
  topicName: String
  topicDetails: String
  createdAt: DateTime!
  updatedAt: DateTime!
}

type SubCategories {
  id: Float!
  subCategoryName: String!
  subCategoryDescription: String!
  isAvailable: Boolean!
  createdAt: DateTime!
  updatedAt: DateTime!
  Topic: [Topic!]
}

type getCategories {
  id: Float!
  categoryName: String!
  isAvailable: Boolean!
  createdAt: DateTime!
  updatedAt: DateTime!
  SubCategory: [SubCategories!]
}

type childrenNav {
  id: Float!
  childrenName: String
  childrenUrl: String
  childrenDetails: String
  assignedRole: String
  isLocked: Boolean
}

type getNavMemu {
  id: Float!
  navigationName: String!
  navigationUrl: String
  assignedRole: String!
  isLocked: Boolean!
  createdAt: DateTime!
  updatedAt: DateTime!
  ChildrenNavigationMenu: [childrenNav!]
}

type Query {
  sayHello: String!
  getServiceStatus: getServiceStatus!
  getSemester: [getSemester!]!
  findSemester(findSemesterDto: FindSemesterDto!): getSemester!
  searchFileBySemester(searchSemesterFile: SearchSemesterFile!): [searchFileBySemesterModel!]!
  getDocumentByCategory(getDocumentByCategory: GetDocumentByCategories!): String!
  getTopicBySubCategories(getTopicBySubCategories: GetTopicBySubCategories!): [TopicModel!]!
  getCategories: [getCategories!]!
  getNavMemu: [getNavMemu!]!
}

input FindSemesterDto {
  semester: String!
}

input SearchSemesterFile {
  semester: String!
}

input GetDocumentByCategories {
  documentId: Float!
}

input GetTopicBySubCategories {
  subCategoryId: Float!
}

type Mutation {
  signIn(localAuthDto: LocalAuthDto!): tokenModel!
  signUp(localAuthRegisterDto: LocalAuthRegisterDto!): tokenModel!
  requestPasswordReset(PasswordResetDto: PasswordResetDto!): PasswordResetResponseModel!
  uploadFile(file: Upload!): Boolean!
  checkSemester(checkSemester: CheckSemesterDto!): Boolean!
}

input LocalAuthDto {
  username: String!
  password: String!
}

input LocalAuthRegisterDto {
  username: String!
  password: String!
  fullname: String!
  email: String!
}

input PasswordResetDto {
  username: String!
}

"""The `Upload` scalar type represents a file upload."""
scalar Upload

input CheckSemesterDto {
  semester: String!
}
